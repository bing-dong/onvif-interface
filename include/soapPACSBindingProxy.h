/* soapPACSBindingProxy.h
   Generated by gSOAP 2.8.117 for samples/onvif/onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapPACSBindingProxy_H
#define soapPACSBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC PACSBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'PACSBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in samples/onvif/onvif.h, if any
        /// Construct a proxy with new managing context
        PACSBindingProxy();
        /// Copy constructor
        PACSBindingProxy(const PACSBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        PACSBindingProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        PACSBindingProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        PACSBindingProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        PACSBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        PACSBindingProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        PACSBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~PACSBindingProxy();
        /// Initializer used by constructors
        virtual void PACSBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual PACSBindingProxy *copy();
        /// Copy assignment
        PACSBindingProxy& operator=(const PACSBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'GetServiceCapabilities' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(_ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, ns1__GetServiceCapabilities, ns1__GetServiceCapabilitiesResponse); }
        /// Web service synchronous operation 'GetServiceCapabilities' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse) { return this->send_GetServiceCapabilities(soap_endpoint_url, soap_action, ns1__GetServiceCapabilities) || this->recv_GetServiceCapabilities(ns1__GetServiceCapabilitiesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetServiceCapabilities' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities);
        /// Web service asynchronous operation 'recv_GetServiceCapabilities' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetServiceCapabilities(_ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse);
        //
        /// Web service synchronous operation 'GetAccessPointInfoList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointInfoList(_ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList, _ns1__GetAccessPointInfoListResponse &ns1__GetAccessPointInfoListResponse) { return this->GetAccessPointInfoList(NULL, NULL, ns1__GetAccessPointInfoList, ns1__GetAccessPointInfoListResponse); }
        /// Web service synchronous operation 'GetAccessPointInfoList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointInfoList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList, _ns1__GetAccessPointInfoListResponse &ns1__GetAccessPointInfoListResponse) { return this->send_GetAccessPointInfoList(soap_endpoint_url, soap_action, ns1__GetAccessPointInfoList) || this->recv_GetAccessPointInfoList(ns1__GetAccessPointInfoListResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAccessPointInfoList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAccessPointInfoList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList);
        /// Web service asynchronous operation 'recv_GetAccessPointInfoList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAccessPointInfoList(_ns1__GetAccessPointInfoListResponse &ns1__GetAccessPointInfoListResponse);
        //
        /// Web service synchronous operation 'GetAccessPointInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointInfo(_ns1__GetAccessPointInfo *ns1__GetAccessPointInfo, _ns1__GetAccessPointInfoResponse &ns1__GetAccessPointInfoResponse) { return this->GetAccessPointInfo(NULL, NULL, ns1__GetAccessPointInfo, ns1__GetAccessPointInfoResponse); }
        /// Web service synchronous operation 'GetAccessPointInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointInfo(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointInfo *ns1__GetAccessPointInfo, _ns1__GetAccessPointInfoResponse &ns1__GetAccessPointInfoResponse) { return this->send_GetAccessPointInfo(soap_endpoint_url, soap_action, ns1__GetAccessPointInfo) || this->recv_GetAccessPointInfo(ns1__GetAccessPointInfoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAccessPointInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAccessPointInfo(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointInfo *ns1__GetAccessPointInfo);
        /// Web service asynchronous operation 'recv_GetAccessPointInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAccessPointInfo(_ns1__GetAccessPointInfoResponse &ns1__GetAccessPointInfoResponse);
        //
        /// Web service synchronous operation 'GetAccessPointList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointList(_ns1__GetAccessPointList *ns1__GetAccessPointList, _ns1__GetAccessPointListResponse &ns1__GetAccessPointListResponse) { return this->GetAccessPointList(NULL, NULL, ns1__GetAccessPointList, ns1__GetAccessPointListResponse); }
        /// Web service synchronous operation 'GetAccessPointList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointList *ns1__GetAccessPointList, _ns1__GetAccessPointListResponse &ns1__GetAccessPointListResponse) { return this->send_GetAccessPointList(soap_endpoint_url, soap_action, ns1__GetAccessPointList) || this->recv_GetAccessPointList(ns1__GetAccessPointListResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAccessPointList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAccessPointList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointList *ns1__GetAccessPointList);
        /// Web service asynchronous operation 'recv_GetAccessPointList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAccessPointList(_ns1__GetAccessPointListResponse &ns1__GetAccessPointListResponse);
        //
        /// Web service synchronous operation 'GetAccessPoints' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPoints(_ns1__GetAccessPoints *ns1__GetAccessPoints, _ns1__GetAccessPointsResponse &ns1__GetAccessPointsResponse) { return this->GetAccessPoints(NULL, NULL, ns1__GetAccessPoints, ns1__GetAccessPointsResponse); }
        /// Web service synchronous operation 'GetAccessPoints' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPoints(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPoints *ns1__GetAccessPoints, _ns1__GetAccessPointsResponse &ns1__GetAccessPointsResponse) { return this->send_GetAccessPoints(soap_endpoint_url, soap_action, ns1__GetAccessPoints) || this->recv_GetAccessPoints(ns1__GetAccessPointsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAccessPoints' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAccessPoints(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPoints *ns1__GetAccessPoints);
        /// Web service asynchronous operation 'recv_GetAccessPoints' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAccessPoints(_ns1__GetAccessPointsResponse &ns1__GetAccessPointsResponse);
        //
        /// Web service synchronous operation 'CreateAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateAccessPoint(_ns1__CreateAccessPoint *ns1__CreateAccessPoint, _ns1__CreateAccessPointResponse &ns1__CreateAccessPointResponse) { return this->CreateAccessPoint(NULL, NULL, ns1__CreateAccessPoint, ns1__CreateAccessPointResponse); }
        /// Web service synchronous operation 'CreateAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateAccessPoint *ns1__CreateAccessPoint, _ns1__CreateAccessPointResponse &ns1__CreateAccessPointResponse) { return this->send_CreateAccessPoint(soap_endpoint_url, soap_action, ns1__CreateAccessPoint) || this->recv_CreateAccessPoint(ns1__CreateAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateAccessPoint *ns1__CreateAccessPoint);
        /// Web service asynchronous operation 'recv_CreateAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateAccessPoint(_ns1__CreateAccessPointResponse &ns1__CreateAccessPointResponse);
        //
        /// Web service synchronous operation 'SetAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetAccessPoint(_ns1__SetAccessPoint *ns1__SetAccessPoint, _ns1__SetAccessPointResponse &ns1__SetAccessPointResponse) { return this->SetAccessPoint(NULL, NULL, ns1__SetAccessPoint, ns1__SetAccessPointResponse); }
        /// Web service synchronous operation 'SetAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAccessPoint *ns1__SetAccessPoint, _ns1__SetAccessPointResponse &ns1__SetAccessPointResponse) { return this->send_SetAccessPoint(soap_endpoint_url, soap_action, ns1__SetAccessPoint) || this->recv_SetAccessPoint(ns1__SetAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAccessPoint *ns1__SetAccessPoint);
        /// Web service asynchronous operation 'recv_SetAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetAccessPoint(_ns1__SetAccessPointResponse &ns1__SetAccessPointResponse);
        //
        /// Web service synchronous operation 'ModifyAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyAccessPoint(_ns1__ModifyAccessPoint *ns1__ModifyAccessPoint, _ns1__ModifyAccessPointResponse &ns1__ModifyAccessPointResponse) { return this->ModifyAccessPoint(NULL, NULL, ns1__ModifyAccessPoint, ns1__ModifyAccessPointResponse); }
        /// Web service synchronous operation 'ModifyAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__ModifyAccessPoint *ns1__ModifyAccessPoint, _ns1__ModifyAccessPointResponse &ns1__ModifyAccessPointResponse) { return this->send_ModifyAccessPoint(soap_endpoint_url, soap_action, ns1__ModifyAccessPoint) || this->recv_ModifyAccessPoint(ns1__ModifyAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ModifyAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ModifyAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__ModifyAccessPoint *ns1__ModifyAccessPoint);
        /// Web service asynchronous operation 'recv_ModifyAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ModifyAccessPoint(_ns1__ModifyAccessPointResponse &ns1__ModifyAccessPointResponse);
        //
        /// Web service synchronous operation 'DeleteAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteAccessPoint(_ns1__DeleteAccessPoint *ns1__DeleteAccessPoint, _ns1__DeleteAccessPointResponse &ns1__DeleteAccessPointResponse) { return this->DeleteAccessPoint(NULL, NULL, ns1__DeleteAccessPoint, ns1__DeleteAccessPointResponse); }
        /// Web service synchronous operation 'DeleteAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteAccessPoint *ns1__DeleteAccessPoint, _ns1__DeleteAccessPointResponse &ns1__DeleteAccessPointResponse) { return this->send_DeleteAccessPoint(soap_endpoint_url, soap_action, ns1__DeleteAccessPoint) || this->recv_DeleteAccessPoint(ns1__DeleteAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteAccessPoint *ns1__DeleteAccessPoint);
        /// Web service asynchronous operation 'recv_DeleteAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteAccessPoint(_ns1__DeleteAccessPointResponse &ns1__DeleteAccessPointResponse);
        //
        /// Web service synchronous operation 'SetAccessPointAuthenticationProfile' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetAccessPointAuthenticationProfile(_ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile, _ns1__SetAccessPointAuthenticationProfileResponse &ns1__SetAccessPointAuthenticationProfileResponse) { return this->SetAccessPointAuthenticationProfile(NULL, NULL, ns1__SetAccessPointAuthenticationProfile, ns1__SetAccessPointAuthenticationProfileResponse); }
        /// Web service synchronous operation 'SetAccessPointAuthenticationProfile' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetAccessPointAuthenticationProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile, _ns1__SetAccessPointAuthenticationProfileResponse &ns1__SetAccessPointAuthenticationProfileResponse) { return this->send_SetAccessPointAuthenticationProfile(soap_endpoint_url, soap_action, ns1__SetAccessPointAuthenticationProfile) || this->recv_SetAccessPointAuthenticationProfile(ns1__SetAccessPointAuthenticationProfileResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetAccessPointAuthenticationProfile' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetAccessPointAuthenticationProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile);
        /// Web service asynchronous operation 'recv_SetAccessPointAuthenticationProfile' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetAccessPointAuthenticationProfile(_ns1__SetAccessPointAuthenticationProfileResponse &ns1__SetAccessPointAuthenticationProfileResponse);
        //
        /// Web service synchronous operation 'DeleteAccessPointAuthenticationProfile' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteAccessPointAuthenticationProfile(_ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile, _ns1__DeleteAccessPointAuthenticationProfileResponse &ns1__DeleteAccessPointAuthenticationProfileResponse) { return this->DeleteAccessPointAuthenticationProfile(NULL, NULL, ns1__DeleteAccessPointAuthenticationProfile, ns1__DeleteAccessPointAuthenticationProfileResponse); }
        /// Web service synchronous operation 'DeleteAccessPointAuthenticationProfile' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteAccessPointAuthenticationProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile, _ns1__DeleteAccessPointAuthenticationProfileResponse &ns1__DeleteAccessPointAuthenticationProfileResponse) { return this->send_DeleteAccessPointAuthenticationProfile(soap_endpoint_url, soap_action, ns1__DeleteAccessPointAuthenticationProfile) || this->recv_DeleteAccessPointAuthenticationProfile(ns1__DeleteAccessPointAuthenticationProfileResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteAccessPointAuthenticationProfile' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteAccessPointAuthenticationProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile);
        /// Web service asynchronous operation 'recv_DeleteAccessPointAuthenticationProfile' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteAccessPointAuthenticationProfile(_ns1__DeleteAccessPointAuthenticationProfileResponse &ns1__DeleteAccessPointAuthenticationProfileResponse);
        //
        /// Web service synchronous operation 'GetAreaInfoList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaInfoList(_ns1__GetAreaInfoList *ns1__GetAreaInfoList, _ns1__GetAreaInfoListResponse &ns1__GetAreaInfoListResponse) { return this->GetAreaInfoList(NULL, NULL, ns1__GetAreaInfoList, ns1__GetAreaInfoListResponse); }
        /// Web service synchronous operation 'GetAreaInfoList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaInfoList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaInfoList *ns1__GetAreaInfoList, _ns1__GetAreaInfoListResponse &ns1__GetAreaInfoListResponse) { return this->send_GetAreaInfoList(soap_endpoint_url, soap_action, ns1__GetAreaInfoList) || this->recv_GetAreaInfoList(ns1__GetAreaInfoListResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAreaInfoList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAreaInfoList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaInfoList *ns1__GetAreaInfoList);
        /// Web service asynchronous operation 'recv_GetAreaInfoList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAreaInfoList(_ns1__GetAreaInfoListResponse &ns1__GetAreaInfoListResponse);
        //
        /// Web service synchronous operation 'GetAreaInfo' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaInfo(_ns1__GetAreaInfo *ns1__GetAreaInfo, _ns1__GetAreaInfoResponse &ns1__GetAreaInfoResponse) { return this->GetAreaInfo(NULL, NULL, ns1__GetAreaInfo, ns1__GetAreaInfoResponse); }
        /// Web service synchronous operation 'GetAreaInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaInfo(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaInfo *ns1__GetAreaInfo, _ns1__GetAreaInfoResponse &ns1__GetAreaInfoResponse) { return this->send_GetAreaInfo(soap_endpoint_url, soap_action, ns1__GetAreaInfo) || this->recv_GetAreaInfo(ns1__GetAreaInfoResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAreaInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAreaInfo(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaInfo *ns1__GetAreaInfo);
        /// Web service asynchronous operation 'recv_GetAreaInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAreaInfo(_ns1__GetAreaInfoResponse &ns1__GetAreaInfoResponse);
        //
        /// Web service synchronous operation 'GetAreaList' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaList(_ns1__GetAreaList *ns1__GetAreaList, _ns1__GetAreaListResponse &ns1__GetAreaListResponse) { return this->GetAreaList(NULL, NULL, ns1__GetAreaList, ns1__GetAreaListResponse); }
        /// Web service synchronous operation 'GetAreaList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreaList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaList *ns1__GetAreaList, _ns1__GetAreaListResponse &ns1__GetAreaListResponse) { return this->send_GetAreaList(soap_endpoint_url, soap_action, ns1__GetAreaList) || this->recv_GetAreaList(ns1__GetAreaListResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAreaList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAreaList(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreaList *ns1__GetAreaList);
        /// Web service asynchronous operation 'recv_GetAreaList' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAreaList(_ns1__GetAreaListResponse &ns1__GetAreaListResponse);
        //
        /// Web service synchronous operation 'GetAreas' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreas(_ns1__GetAreas *ns1__GetAreas, _ns1__GetAreasResponse &ns1__GetAreasResponse) { return this->GetAreas(NULL, NULL, ns1__GetAreas, ns1__GetAreasResponse); }
        /// Web service synchronous operation 'GetAreas' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAreas(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreas *ns1__GetAreas, _ns1__GetAreasResponse &ns1__GetAreasResponse) { return this->send_GetAreas(soap_endpoint_url, soap_action, ns1__GetAreas) || this->recv_GetAreas(ns1__GetAreasResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAreas' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAreas(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAreas *ns1__GetAreas);
        /// Web service asynchronous operation 'recv_GetAreas' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAreas(_ns1__GetAreasResponse &ns1__GetAreasResponse);
        //
        /// Web service synchronous operation 'CreateArea' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateArea(_ns1__CreateArea *ns1__CreateArea, _ns1__CreateAreaResponse &ns1__CreateAreaResponse) { return this->CreateArea(NULL, NULL, ns1__CreateArea, ns1__CreateAreaResponse); }
        /// Web service synchronous operation 'CreateArea' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateArea(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateArea *ns1__CreateArea, _ns1__CreateAreaResponse &ns1__CreateAreaResponse) { return this->send_CreateArea(soap_endpoint_url, soap_action, ns1__CreateArea) || this->recv_CreateArea(ns1__CreateAreaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateArea' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateArea(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateArea *ns1__CreateArea);
        /// Web service asynchronous operation 'recv_CreateArea' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateArea(_ns1__CreateAreaResponse &ns1__CreateAreaResponse);
        //
        /// Web service synchronous operation 'SetArea' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetArea(_ns1__SetArea *ns1__SetArea, _ns1__SetAreaResponse &ns1__SetAreaResponse) { return this->SetArea(NULL, NULL, ns1__SetArea, ns1__SetAreaResponse); }
        /// Web service synchronous operation 'SetArea' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetArea(const char *soap_endpoint_url, const char *soap_action, _ns1__SetArea *ns1__SetArea, _ns1__SetAreaResponse &ns1__SetAreaResponse) { return this->send_SetArea(soap_endpoint_url, soap_action, ns1__SetArea) || this->recv_SetArea(ns1__SetAreaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetArea' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetArea(const char *soap_endpoint_url, const char *soap_action, _ns1__SetArea *ns1__SetArea);
        /// Web service asynchronous operation 'recv_SetArea' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetArea(_ns1__SetAreaResponse &ns1__SetAreaResponse);
        //
        /// Web service synchronous operation 'ModifyArea' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyArea(_ns1__ModifyArea *ns1__ModifyArea, _ns1__ModifyAreaResponse &ns1__ModifyAreaResponse) { return this->ModifyArea(NULL, NULL, ns1__ModifyArea, ns1__ModifyAreaResponse); }
        /// Web service synchronous operation 'ModifyArea' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ModifyArea(const char *soap_endpoint_url, const char *soap_action, _ns1__ModifyArea *ns1__ModifyArea, _ns1__ModifyAreaResponse &ns1__ModifyAreaResponse) { return this->send_ModifyArea(soap_endpoint_url, soap_action, ns1__ModifyArea) || this->recv_ModifyArea(ns1__ModifyAreaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ModifyArea' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ModifyArea(const char *soap_endpoint_url, const char *soap_action, _ns1__ModifyArea *ns1__ModifyArea);
        /// Web service asynchronous operation 'recv_ModifyArea' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ModifyArea(_ns1__ModifyAreaResponse &ns1__ModifyAreaResponse);
        //
        /// Web service synchronous operation 'DeleteArea' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteArea(_ns1__DeleteArea *ns1__DeleteArea, _ns1__DeleteAreaResponse &ns1__DeleteAreaResponse) { return this->DeleteArea(NULL, NULL, ns1__DeleteArea, ns1__DeleteAreaResponse); }
        /// Web service synchronous operation 'DeleteArea' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteArea(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteArea *ns1__DeleteArea, _ns1__DeleteAreaResponse &ns1__DeleteAreaResponse) { return this->send_DeleteArea(soap_endpoint_url, soap_action, ns1__DeleteArea) || this->recv_DeleteArea(ns1__DeleteAreaResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteArea' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteArea(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteArea *ns1__DeleteArea);
        /// Web service asynchronous operation 'recv_DeleteArea' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteArea(_ns1__DeleteAreaResponse &ns1__DeleteAreaResponse);
        //
        /// Web service synchronous operation 'GetAccessPointState' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointState(_ns1__GetAccessPointState *ns1__GetAccessPointState, _ns1__GetAccessPointStateResponse &ns1__GetAccessPointStateResponse) { return this->GetAccessPointState(NULL, NULL, ns1__GetAccessPointState, ns1__GetAccessPointStateResponse); }
        /// Web service synchronous operation 'GetAccessPointState' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetAccessPointState(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointState *ns1__GetAccessPointState, _ns1__GetAccessPointStateResponse &ns1__GetAccessPointStateResponse) { return this->send_GetAccessPointState(soap_endpoint_url, soap_action, ns1__GetAccessPointState) || this->recv_GetAccessPointState(ns1__GetAccessPointStateResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetAccessPointState' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetAccessPointState(const char *soap_endpoint_url, const char *soap_action, _ns1__GetAccessPointState *ns1__GetAccessPointState);
        /// Web service asynchronous operation 'recv_GetAccessPointState' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetAccessPointState(_ns1__GetAccessPointStateResponse &ns1__GetAccessPointStateResponse);
        //
        /// Web service synchronous operation 'EnableAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int EnableAccessPoint(_ns1__EnableAccessPoint *ns1__EnableAccessPoint, _ns1__EnableAccessPointResponse &ns1__EnableAccessPointResponse) { return this->EnableAccessPoint(NULL, NULL, ns1__EnableAccessPoint, ns1__EnableAccessPointResponse); }
        /// Web service synchronous operation 'EnableAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int EnableAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__EnableAccessPoint *ns1__EnableAccessPoint, _ns1__EnableAccessPointResponse &ns1__EnableAccessPointResponse) { return this->send_EnableAccessPoint(soap_endpoint_url, soap_action, ns1__EnableAccessPoint) || this->recv_EnableAccessPoint(ns1__EnableAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_EnableAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_EnableAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__EnableAccessPoint *ns1__EnableAccessPoint);
        /// Web service asynchronous operation 'recv_EnableAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_EnableAccessPoint(_ns1__EnableAccessPointResponse &ns1__EnableAccessPointResponse);
        //
        /// Web service synchronous operation 'DisableAccessPoint' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DisableAccessPoint(_ns1__DisableAccessPoint *ns1__DisableAccessPoint, _ns1__DisableAccessPointResponse &ns1__DisableAccessPointResponse) { return this->DisableAccessPoint(NULL, NULL, ns1__DisableAccessPoint, ns1__DisableAccessPointResponse); }
        /// Web service synchronous operation 'DisableAccessPoint' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DisableAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__DisableAccessPoint *ns1__DisableAccessPoint, _ns1__DisableAccessPointResponse &ns1__DisableAccessPointResponse) { return this->send_DisableAccessPoint(soap_endpoint_url, soap_action, ns1__DisableAccessPoint) || this->recv_DisableAccessPoint(ns1__DisableAccessPointResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DisableAccessPoint' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DisableAccessPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__DisableAccessPoint *ns1__DisableAccessPoint);
        /// Web service asynchronous operation 'recv_DisableAccessPoint' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DisableAccessPoint(_ns1__DisableAccessPointResponse &ns1__DisableAccessPointResponse);
        //
        /// Web service synchronous operation 'ExternalAuthorization' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ExternalAuthorization(_ns1__ExternalAuthorization *ns1__ExternalAuthorization, _ns1__ExternalAuthorizationResponse &ns1__ExternalAuthorizationResponse) { return this->ExternalAuthorization(NULL, NULL, ns1__ExternalAuthorization, ns1__ExternalAuthorizationResponse); }
        /// Web service synchronous operation 'ExternalAuthorization' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ExternalAuthorization(const char *soap_endpoint_url, const char *soap_action, _ns1__ExternalAuthorization *ns1__ExternalAuthorization, _ns1__ExternalAuthorizationResponse &ns1__ExternalAuthorizationResponse) { return this->send_ExternalAuthorization(soap_endpoint_url, soap_action, ns1__ExternalAuthorization) || this->recv_ExternalAuthorization(ns1__ExternalAuthorizationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ExternalAuthorization' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ExternalAuthorization(const char *soap_endpoint_url, const char *soap_action, _ns1__ExternalAuthorization *ns1__ExternalAuthorization);
        /// Web service asynchronous operation 'recv_ExternalAuthorization' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ExternalAuthorization(_ns1__ExternalAuthorizationResponse &ns1__ExternalAuthorizationResponse);
        //
        /// Web service synchronous operation 'Feedback' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int Feedback(_ns1__Feedback *ns1__Feedback, _ns1__FeedbackResponse &ns1__FeedbackResponse) { return this->Feedback(NULL, NULL, ns1__Feedback, ns1__FeedbackResponse); }
        /// Web service synchronous operation 'Feedback' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int Feedback(const char *soap_endpoint_url, const char *soap_action, _ns1__Feedback *ns1__Feedback, _ns1__FeedbackResponse &ns1__FeedbackResponse) { return this->send_Feedback(soap_endpoint_url, soap_action, ns1__Feedback) || this->recv_Feedback(ns1__FeedbackResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_Feedback' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_Feedback(const char *soap_endpoint_url, const char *soap_action, _ns1__Feedback *ns1__Feedback);
        /// Web service asynchronous operation 'recv_Feedback' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_Feedback(_ns1__FeedbackResponse &ns1__FeedbackResponse);
    };
#endif
